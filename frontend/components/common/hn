{/* Notification Bell with Backdrop */}
                    <div className="relative dropdown-container">
                        <div className="relative">
                            {unreadCount > 0 && (
                                <div className="absolute inset-0 bg-gradient-to-r from-red-400 to-pink-500 rounded-xl blur-md opacity-50 animate-pulse"></div>
                            )}
                            <button
                                onClick={() => {
                                    setNotificationDropdownOpen(!notificationDropdownOpen)
                                    if (!notificationDropdownOpen) {
                                        // Tải lại thông báo ngay khi mở dropdown
                                        fetchNotifications()
                                    }
                                }}
                                className="relative p-4 rounded-xl hover:bg-indigo-50 transition-colors border-2"
                                style={{ borderColor: unreadCount > 0 ? '#EF4444' : '#E5E7EB' }}
                            >
                                <Bell className="h-5 w-5 text-gray-600" />
                                {unreadCount > 0 && (
                                    <span className="absolute -top-1 -right-1 h-6 w-6 bg-gradient-to-r from-red-500 to-pink-500 text-white text-xs rounded-full flex items-center justify-center font-bold shadow-lg">
                                        {unreadCount > 99 ? '99+' : unreadCount}
                                    </span>
                                )}
                            </button>
                        </div>

                        {notificationDropdownOpen && (
                            <div className="absolute right-0 mt-2 w-96 bg-white rounded-xl shadow-2xl border-2 z-50 max-h-[32rem] overflow-hidden"
                                 style={{ borderColor: '#E5E7EB' }}>
                                <div className="px-4 py-3 border-b-2 bg-gradient-to-r from-indigo-50 to-purple-50"
                                     style={{ borderColor: '#E5E7EB' }}>
                                    <div className="flex items-center justify-between">
                                        <div>
                                            <p className="text-sm font-bold text-gray-900">Thông báo</p>
                                            {unreadCount > 0 && (
                                                <p className="text-xs text-gray-600">{unreadCount} thông báo chưa đọc</p>
                                            )}
                                        </div>
                                        <div className="flex items-center space-x-2">
                                            {unreadCount > 0 && (
                                                <button
                                                    onClick={handleMarkAllAsRead}
                                                    className="text-xs font-medium p-1 rounded-lg hover:bg-white transition-colors text-indigo-600"
                                                    title="Đánh dấu tất cả đã đọc"
                                                >
                                                    <CheckCheck className="h-4 w-4" />
                                                </button>
                                            )}
                                            <button
                                                onClick={() => router.push('/notifications/notifications')}
                                                className="text-xs font-bold text-indigo-600"
                                            >
                                                Xem tất cả →
                                            </button>
                                        </div>
                                    </div>
                                </div>

                                <div className="max-h-96 overflow-y-auto">
                                    {notificationsLoading ? (
                                        <div className="flex items-center justify-center py-8">
                                            <Loader2 className="h-6 w-6 animate-spin text-indigo-600" />
                                            <span className="ml-2 text-sm text-gray-600">Đang tải...</span>
                                        </div>
                                    ) : notifications.length === 0 ? (
                                        <div className="px-4 py-12 text-center">
                                            <Bell className="h-12 w-12 text-gray-400 mx-auto mb-3" />
                                            <p className="text-sm mb-1 text-gray-600 font-semibold">Không có thông báo mới</p>
                                            <p className="text-xs text-gray-500">Các thông báo của bạn sẽ xuất hiện ở đây</p>
                                        </div>
                                    ) : (
                                        notifications.map((notification) => (
                                            <div
                                                key={notification._id}
                                                onClick={() => handleNotificationClick(notification)}
                                                className={`px-4 py-3 hover:bg-indigo-50 cursor-pointer border-b-2 transition-colors ${
                                                    notification.isUnread ? 'bg-blue-50' : ''
                                                }`}
                                                style={{ borderColor: '#E5E7EB' }}
                                            >
                                                <div className="flex items-start space-x-3">
                                                    <div className="flex-shrink-0 mt-1">
                                                        {getPriorityIcon(notification.priority)}
                                                    </div>
                                                    <div className="flex-1 min-w-0">
                                                        <div className="flex items-start justify-between mb-1">
                                                            <p className={`text-sm font-bold ${
                                                                notification.isUnread ? 'text-gray-900' : 'text-gray-700'
                                                            }`}>
                                                                {notification.title}
                                                            </p>
                                                            {/* SỬA LỖI RENDER: Sử dụng optional chaining cho message */}
                                                            <p className="text-xs mb-2 line-clamp-2 text-gray-600">
                                                                {notification.message}
                                                            </p>
                                                            {notification.isUnread && (
                                                                <div className="flex-shrink-0 ml-2">
                                                                    <div className="h-2 w-2 rounded-full bg-indigo-600"></div>
                                                                </div>
                                                            )}
                                                        </div>
                                                        <div className="flex items-center justify-between">
                                                            <div className="flex items-center text-xs text-gray-500">
                                                                <Clock className="h-3 w-3 mr-1" />
                                                                {formatNotificationTime(notification.createdAt)}
                                                            </div>
                                                            {notification.isUnread && (
                                                                <button
                                                                    onClick={(e) => handleMarkAsRead(e, notification._id)}
                                                                    className="text-xs font-medium text-indigo-600"
                                                                    title="Đánh dấu đã đọc"
                                                                >
                                                                    <Eye className="h-3 w-3" />
                                                                </button>
                                                            )}
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        ))
                                    )}
                                </div>

                                {notifications.length > 0 && (
                                    <div className="px-4 py-3 border-t-2 bg-gray-50" style={{ borderColor: '#E5E7EB' }}>
                                        <button
                                            onClick={() => {
                                                setNotificationDropdownOpen(false)
                                                router.push('/notifications/notifications')
                                            }}
                                            className="w-full text-center text-sm font-bold text-indigo-600"
                                        >
                                            Xem tất cả thông báo
                                        </button>
                                    </div>
                                )}
                            </div>
                        )}
                    </div>